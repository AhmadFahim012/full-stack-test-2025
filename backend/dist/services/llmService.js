"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LLMService = void 0;
const uuid_1 = require("uuid");
const SIMULATED_RESPONSES = [
    "I understand your question and I'd be happy to help you with that. Let me provide you with a comprehensive answer that covers the key aspects of what you're asking about. This is a simulated response from an AI assistant that would normally be generated by a large language model.",
    "That's an interesting topic you've brought up. Based on the context you've provided, I can offer several perspectives on this matter. Here's what I think you should consider: First, there are multiple factors at play here that need to be addressed. Second, the approach you're considering has both advantages and potential drawbacks. Finally, I'd recommend taking a systematic approach to evaluate all your options before making a decision.",
    "Thank you for sharing that with me. I can see why this would be important to you. Let me break down my thoughts on this topic: The situation you're describing is quite common, and there are several proven strategies that have worked well for others in similar circumstances. I'd suggest starting with a thorough analysis of your current situation, then identifying the key constraints and opportunities available to you.",
    "I appreciate you taking the time to explain this to me. This is definitely a complex topic that requires careful consideration. From what I can gather, you're dealing with multiple interconnected factors that all need to be balanced. Here's my assessment: The primary challenge seems to be finding the right balance between different competing priorities. I'd recommend creating a structured approach that allows you to evaluate each component systematically while keeping the overall objective in mind.",
    "That's a great question, and I can see why it's important to you. Let me provide you with a detailed response that should help clarify the situation. Based on my understanding of the context, there are several key points to consider: First, the current state of affairs presents both opportunities and challenges. Second, the timeline you're working with will significantly impact the available options. Third, the resources at your disposal will determine which approaches are most viable.",
    "I understand your concern, and I want to make sure I give you a thorough and helpful response. This is a nuanced topic that requires careful analysis. Here's what I think: The approach you're considering has merit, but there are some important factors to weigh. I'd suggest starting with a clear definition of your goals, then mapping out the various paths that could lead you there. Each option will have different trade-offs in terms of time, resources, and potential outcomes."
];
class LLMService {
    constructor() { }
    static getInstance() {
        if (!LLMService.instance) {
            LLMService.instance = new LLMService();
        }
        return LLMService.instance;
    }
    async generateResponse(request) {
        const delay = this.getRandomDelay(10000, 20000);
        console.log(`LLM Service.`);
        await this.sleep(delay);
        const randomResponse = SIMULATED_RESPONSES[Math.floor(Math.random() * SIMULATED_RESPONSES.length)];
        const contextualResponse = this.addContextToResponse(request.message, randomResponse);
        const response = {
            id: (0, uuid_1.v4)(),
            message: contextualResponse,
            timestamp: new Date().toISOString(),
            model: 'gpt-4-simulated'
        };
        console.log(`LLM Service completed`);
        return response;
    }
    getRandomDelay(min, max) {
        return Math.floor(Math.random() * (max - min + 1)) + min;
    }
    sleep(ms) {
        return new Promise(resolve => setTimeout(resolve, ms));
    }
    addContextToResponse(userMessage, baseResponse) {
        const lowerMessage = userMessage.toLowerCase();
        if (lowerMessage.includes('help') || lowerMessage.includes('how')) {
            return `I'd be happy to help you with that! ${baseResponse}`;
        }
        if (lowerMessage.includes('explain') || lowerMessage.includes('what')) {
            return `Let me explain that for you. ${baseResponse}`;
        }
        if (lowerMessage.includes('problem') || lowerMessage.includes('issue')) {
            return `I understand you're facing a challenge. ${baseResponse}`;
        }
        if (lowerMessage.includes('thank') || lowerMessage.includes('thanks')) {
            return `You're very welcome! ${baseResponse}`;
        }
        return baseResponse;
    }
    async *generateStreamingResponse(request) {
        const response = await this.generateResponse(request);
        const words = response.message.split(' ');
        for (let i = 0; i < words.length; i++) {
            yield words[i] + (i < words.length - 1 ? ' ' : '');
            await this.sleep(50);
        }
    }
}
exports.LLMService = LLMService;
//# sourceMappingURL=llmService.js.map